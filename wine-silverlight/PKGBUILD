# Maintainer  : Anish Bhatt anish [at] gatech [dot] edu
# Contributor : Jesus Alvarez <jeezusjr@gmail.com>
# Contributor : sxe <sxxe@gmx.de>
# Based on the wine package in the community repository

pkgname=wine-silverlight
pkgver=1.7.10
pkgrel=1
pkgdesc="WINE patched with Microsoft Silverlight and Netflix compatibility."
url="http://www.winehq.com"
license=('LGPL2.1')
arch=('x86_64' 'i686')
options=(staticlibs !makeflags)
install=wine-silverlight.install

source=(http://prdownloads.sourceforge.net/wine/wine-${pkgver}.tar.bz2{,.sign}
        "0001-ws2_32-Ask-the-server-to-process-unsupported-WSAIoct.patch"
        "0002-server-Implement-an-interface-change-notification-ob.patch"
        "0003-ws2_32-Add-an-interactive-test-for-interface-change-.patch"
        "0004-server-Store-and-return-security-attributes-with-ext.patch"
        "0005-ntdll-Inherit-security-attributes-from-parent-direct.patch"
        "0006-kernel32-Allow-string-comparison-with-linguistic-cas.patch"
        "0007-winex11-Update-gl_drawable-for-embedded-windows.patch"
        "0008-winex11-Enable-disable-windows-when-they-are-un-mapped.patch"
        "0009-winex11-Implement-X11DRV_FLUSH_GDI_DISPLAY-ExtEscape-c.patch"
        "0010-kernel32-Change-return-value-of-stub-SetNamedPipeHandl.patch"
        "0011-winmm-Load-winealsa-if-winepulse-is-found.patch"
        "0012-winepulse-Add-initial-stub-for-pulseaudio-support.patch"
        "0013-winepulse-Add-format-and-period-probing.patch"
        "0014-winepulse-Add-audioclient.patch"
        "0015-winepulse-Add-IAudioRenderClient-and-IAudioCaptureCl.patch"
        "0016-winepulse-Add-IAudioClock-and-IAudioClock2.patch"
        "0017-winepulse-Add-audiostreamvolume.patch"
        "0018-winepulse-Add-session-support.patch"
        "0019-fix-fdels-trailing-whitespaces.patch"
        "0020-winepulse-v12.patch"
        "0021-winepulse-v15-Add-support-for-missing-formats-and-si.patch"
        "0022-winepulse-v16-Add-official-warning-wine-doesn-t-want.patch"
        "0023-winepulse-v17-Fix-winmm-tests.patch"
        "0024-winepulse-v18-Latency-and-compilation-improvements.patch"
        "0025-winepulse-API-Compatibility-with-1.5.2-onward-v2.patch"
        "0026-winepulse-Fix-low-latency-support.patch"
        "0027-winepulse-drop-realtime-priority-before-thread-destr.patch"
        "0028-winepulse-remove-bogus-SetEvent-from-pulse_started_c.patch"
        "0029-winepulse-disable-the-setevent-part-of-the-latency-h.patch"
        "0030-winepulse-v20-fix-the-checks-in-IsFormatSupported.patch"
        "0031-winepulse-fixup-IsFormatSupported-calls.patch"
        "0032-winepulse-v21-return-early-if-padding-didn-t-update.patch"
        "0033-winepulse-fix-unneeded-free-in-write.patch"
        "0034-winepulse-v23-fixup-a-invalid-free-in-mmdevapi.patch"
        "0035-winepulse-use-a-pi-mutex-for-serialization.patch"
        "0036-winepulse-add-support-for-IMarshal.patch"
        "0037-quartz-tests-Add-tests-for-IVMRMonitorConfig-and-IVMRM.patch"
        "0038-patch-list.patch"
        "30-win32-aliases.conf")

md5sums=('dc58a93457071b187e75c90ce74c069f'
         'SKIP'
         'ea195209d12f029f51499641bade8c19'
         'b495faac789e4368717efd5534b8c8c7'
         'c54623ff60a72953c108a997e52bfe7d'
         'd7af4990da84cfe5678c36e137ffa78a'
         '9d2fc8ba3a12f0b54dfd788a6d904484'
         '31df02dc75b2e280aee57c1b46de2389'
         '102b21f7108d936a8e9a581d34354795'
         '4e7c6ef1e833605b4522724dc1bac0e5'
         'c29e4d29a28f38e7f28b016342b84bdb'
         'c8958b63e6afe0335d46da9b46520279'
         'aa5f1efa074cf0262e3cfffef3a5d892'
         'cfb1bed1d919b818f398d790dc70e5ed'
         '9e2429a81a5c9e3ac41b486dd6b52a80'
         'f40a9de8efaf190919b284b6be47c8ab'
         '1e31f164b2e6bb7fb1f90e3bf59e308a'
         'ff8f5b426ed75ba463abe3d6e5b0b991'
         'a7ff936bef5ad5ae694924fdff11d007'
         'dd9f72fb51525055a7bd7f0e489dbb2b'
         '5faf22c4f63cdfb2e446ad6ad30237d1'
         'dc0d83c60b7eb1d8a609c365bbdead52'
         '50011fdb695cea4cf4ff04577e993382'
         '6529683b90c49178bf0dc4ac412ffcc5'
         '3435eb8144012da50b147126ea2b328d'
         'ae792bfa8cf4bac85c886bef26d8bda4'
         '1ef0cae8718671c598865a62b41afeab'
         '7354614b4c07bba54de5433d586699d9'
         '54e14150009a3119c04fd83d9c137960'
         'c01ee5e5a1bc16dd615861cb39d82e42'
         '1d3184d6c381bde5135a4993aca95dc5'
         'aaa5d79fd5f8b4dae88d7c563a257b44'
         '4059107af87cd804d0a0f49c16886aaf'
         '3e9a9bc3f423a92c5ad29f703ab15566'
         '997f5db71e8a3aa2d1462e5114e2e145'
         '2fbebc3167c102a9c392d4c1a9b54157'
         '6fbf08cefd8afb71d746c355da1a06b6'
         '49e177f986442efa25c7396be8c5acca'
         'ba18d6e19c4150ddd6034dce7cd3e42b'
         '73a0be34419e69928270a79fe455fbd3'
         '1ff4e467f59409272088d92173a0f801')

depends=('fontconfig'
         'libxcursor'
         'libxrandr'
         'libxdamage'
         'libxi'
         'gettext'
         'freetype2'
         'glu'
         'libsm'
         'gcc-libs'
         'attr'
         'desktop-file-utils')

makedepends=('libgl'
             'autoconf'
             'ncurses'
             'bison'
             'perl'
             'fontforge'
             'flex'
             'prelink'
             'gcc>=4.5.0-2'
             'giflib'
             'libpng'
             'gnutls'
             'libxinerama'
             'libxcomposite'
             'libxmu'
             'libxxf86vm'
             'libxml2'
             'libldap'
             'lcms'
             'mpg123'
             'openal'
             'v4l-utils'
             'alsa-lib'
             'mesa'
             'libcl'
             'opencl-headers'
             'pulseaudio'
             'samba')

optdepends=('giflib'
            'libpng'
            'libldap'
            'gnutls'
            'lcms'
            'libxml2'
            'mpg123'
            'openal'
            'v4l-utils'
            'libpulse'
            'alsa-plugins'
            'alsa-lib'
            'libjpeg-turbo'
            'libxcomposite'
            'libxinerama'
            'libncurses'
            'libcl'
            'pulseaudio'
            'oss'
            'cups'
            'samba')

if [[ $CARCH == x86_64 ]]; then

  depends=('lib32-fontconfig'
           'lib32-libxcursor'
           'lib32-libxrandr'
           'lib32-libxdamage'
           'lib32-libxi'
           'lib32-gettext'
           'lib32-glu'
           'lib32-libsm'
           'lib32-gcc-libs'
           'lib32-attr'
           'desktop-file-utils')

  makedepends=('autoconf'
               'ncurses'
               'bison'
               'perl'
               'fontforge'
               'flex'
               'prelink'
               'gcc-multilib>=4.5.0-2'
               'lib32-giflib'
               'lib32-libpng'
               'lib32-gnutls'
               'lib32-libxinerama'
               'lib32-libxcomposite'
               'lib32-libxmu'
               'lib32-libxxf86vm'
               'lib32-libxml2'
               'lib32-libldap'
               'lib32-lcms'
               'lib32-mpg123'
               'lib32-openal'
               'lib32-v4l-utils'
               'lib32-alsa-lib'
               'lib32-mesa'
               'lib32-libgl'
               'lib32-libcl'
               'attr'
               'samba'
               'pulseaudio'
               'opencl-headers')

  optdepends=('lib32-giflib'
              'lib32-libpng'
              'lib32-libldap'
              'lib32-gnutls'
              'lib32-lcms'
              'lib32-libxml2'
              'lib32-mpg123'
              'lib32-openal'
              'lib32-v4l-utils'
              'lib32-libpulse'
              'lib32-alsa-plugins'
              'lib32-alsa-lib'
              'lib32-libjpeg-turbo'
              'lib32-libxcomposite'
              'lib32-ncurses'
              'lib32-libcl'
              'lib32-libpulse'
              'oss'
              'cups'
              'samba')

fi

_upname="wine-${pkgver}"

# Uncomment the line below if you want wine installed to /opt/wine-silverlight instead of replacing wine
#customprefix=1

if [[ $customprefix != 1 ]]; then
  _prefix="usr"
  _sysconf="etc"
  conflicts=('wine')
  provides=('wine=${pkgver}')
else
  # change _prefix if you don't want to use the default custom prefix of /opt/wine-silverlight
  _prefix="opt/$pkgname"
  _sysconf="$_prefix/etc"
fi

build() {
  cd "$srcdir"




  # ncurses fix
  sed -i 's|libncurses|libncursesw|g' "$srcdir/$_upname/configure"
  sed -i 's|lncurses|lncursesw|g' "$srcdir/$_upname/configure" 

  # Get rid of old build dirs
  rm -rf $pkgname-{32,64}-build
  mkdir $pkgname-32-build

  # These additional CPPFLAGS solve FS#27662 and FS#34195
  export CFLAGS="$CFLAGS -DHAVE_ATTR_XATTR_H=1"
  export CPPFLAGS="${CPPFLAGS/-D_FORTIFY_SOURCE=2/} -D_FORTIFY_SOURCE=0"

  #export MAKEFLAGS="-j4"

  cd "$srcdir"/"${_upname}"

  patch -p1 <../0001-ws2_32-Ask-the-server-to-process-unsupported-WSAIoct.patch
  patch -p1 <../0002-server-Implement-an-interface-change-notification-ob.patch
  patch -p1 <../0003-ws2_32-Add-an-interactive-test-for-interface-change-.patch
  patch -p1 <../0004-server-Store-and-return-security-attributes-with-ext.patch
  patch -p1 <../0005-ntdll-Inherit-security-attributes-from-parent-direct.patch
  patch -p1 <../0006-kernel32-Allow-string-comparison-with-linguistic-cas.patch
  patch -p1 <../0007-winex11-Update-gl_drawable-for-embedded-windows.patch
  patch -p1 <../0008-winex11-Enable-disable-windows-when-they-are-un-mapped.patch
  patch -p1 <../0009-winex11-Implement-X11DRV_FLUSH_GDI_DISPLAY-ExtEscape-c.patch
  patch -p1 <../0010-kernel32-Change-return-value-of-stub-SetNamedPipeHandl.patch
  patch -p1 <../0011-winmm-Load-winealsa-if-winepulse-is-found.patch
  patch -p1 <../0012-winepulse-Add-initial-stub-for-pulseaudio-support.patch
  patch -p1 <../0013-winepulse-Add-format-and-period-probing.patch
  patch -p1 <../0014-winepulse-Add-audioclient.patch
  patch -p1 <../0015-winepulse-Add-IAudioRenderClient-and-IAudioCaptureCl.patch
  patch -p1 <../0016-winepulse-Add-IAudioClock-and-IAudioClock2.patch
  patch -p1 <../0017-winepulse-Add-audiostreamvolume.patch
  patch -p1 <../0018-winepulse-Add-session-support.patch
  patch -p1 <../0019-fix-fdels-trailing-whitespaces.patch
  patch -p1 <../0020-winepulse-v12.patch
  patch -p1 <../0021-winepulse-v15-Add-support-for-missing-formats-and-si.patch
  patch -p1 <../0022-winepulse-v16-Add-official-warning-wine-doesn-t-want.patch
  patch -p1 <../0023-winepulse-v17-Fix-winmm-tests.patch
  patch -p1 <../0024-winepulse-v18-Latency-and-compilation-improvements.patch
  patch -p1 <../0025-winepulse-API-Compatibility-with-1.5.2-onward-v2.patch
  patch -p1 <../0026-winepulse-Fix-low-latency-support.patch
  patch -p1 <../0027-winepulse-drop-realtime-priority-before-thread-destr.patch
  patch -p1 <../0028-winepulse-remove-bogus-SetEvent-from-pulse_started_c.patch
  patch -p1 <../0029-winepulse-disable-the-setevent-part-of-the-latency-h.patch
  patch -p1 <../0030-winepulse-v20-fix-the-checks-in-IsFormatSupported.patch
  patch -p1 <../0031-winepulse-fixup-IsFormatSupported-calls.patch
  patch -p1 <../0032-winepulse-v21-return-early-if-padding-didn-t-update.patch
  patch -p1 <../0033-winepulse-fix-unneeded-free-in-write.patch
  patch -p1 <../0034-winepulse-v23-fixup-a-invalid-free-in-mmdevapi.patch
  patch -p1 <../0035-winepulse-use-a-pi-mutex-for-serialization.patch
  patch -p1 <../0036-winepulse-add-support-for-IMarshal.patch
  patch -p1 <../0037-quartz-tests-Add-tests-for-IVMRMonitorConfig-and-IVMRM.patch
  patch -p1 <../0038-patch-list.patch

  autoreconf

  cd "$srcdir"

  if [[ $CARCH == x86_64 ]]; then

    msg2 "Building Wine-64..."
    mkdir $pkgname-64-build
    cd "$srcdir/$pkgname-64-build"
    ../$_upname/configure \
      --prefix=/$_prefix \
      --sysconfdir=/$_sysconf \
      --libdir=/$_prefix/lib \
      --with-x \
      --with-xattr \
      --without-gstreamer \
      --enable-win64
    # Gstreamer was disabled for FS#33655
    make depend
    make

    _wine32opts=(
      --libdir=/$_prefix/lib32
      --with-wine64="$srcdir/$pkgname-64-build"
    )

    export PKG_CONFIG_PATH="/$_prefix/lib32/pkgconfig"
  fi

  msg2 "Building Wine-32..."
  cd "$srcdir/$pkgname-32-build"
  ../$_upname/configure \
    --prefix=/$_prefix \
    --sysconfdir=/$_sysconf \
    --with-x \
    --with-xattr \
    --without-gstreamer \
    "${_wine32opts[@]}"

  # These additional flags solve FS#23277
  make depend CFLAGS+="-mstackrealign -mincoming-stack-boundary=2" CXXFLAGS+="-mstackrealign -mincoming-stack-boundary=2"
  make CFLAGS+="-mstackrealign -mincoming-stack-boundary=2" CXXFLAGS+="-mstackrealign -mincoming-stack-boundary=2"
}

package() {
  msg2 "Packaging Wine-32..."
  cd "$srcdir/$pkgname-32-build"

  if [[ $CARCH == i686 ]]; then
    make prefix="$pkgdir/$_prefix" install
  else
    make prefix="$pkgdir/$_prefix" \
      libdir="$pkgdir/$_prefix/lib32" \
      dlldir="$pkgdir/$_prefix/lib32/wine" install

    msg2 "Packaging Wine-64..."
    cd "$srcdir/$pkgname-64-build"
    make prefix="$pkgdir/$_prefix" \
      libdir="$pkgdir/$_prefix/lib" \
      dlldir="$pkgdir/$_prefix/lib/wine" install
  fi

  # Font aliasing settings for Win32 applications
if [[ $customprefix != 1 ]]; then
  install -d "$pkgdir"/etc/fonts/conf.{avail,d}
  install -m644 "$srcdir/30-win32-aliases.conf" "$pkgdir/etc/fonts/conf.avail"
  ln -s ../conf.avail/30-win32-aliases.conf "$pkgdir/etc/fonts/conf.d/30-win32-aliases.conf"
fi

}
# vim:set ts=2 sw=2 tw=0 et:
